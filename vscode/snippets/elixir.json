{
/*
	// Place your snippets for Elixir here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/

  "Module": {
    "prefix": "defm",
    "description": "Module definition",
    "body": [
      "defmodule $1 do",
      "\t$0",
      "end"
    ]
  },
  "IO.puts": {
    "prefix": "ip",
    "description": "Print to screen",
    "body": "IO.puts \"$1\""
  },
  "IO.inspect": {
    "prefix": "ii",
    "description": "Print variable to screen",
    "body": "IO.inspect($1${2:, label: $3})"
  },
  "Inline function": {
    "prefix": "idef",
    "description": "Inline function",
    "body": "def ${1:function_name}($2), do: $3"
  },
  "Inline private function": {
    "prefix": "idefp",
    "description": "Inline private function",
    "body": "defp ${1:function_name}($2), do: $3"
  },
  "Annonymous function": {
    "prefix": "af",
    "description": "Annonymous function",
    "body": "fn($1) -> $2 end$0"
  },
  "Module constant": {
    "prefix": "mod",
    "description": "Module constant",
    "body": "__MODULE__"
  },
  "With": {
    "prefix": "with",
    "description": "With keyword",
    "body": [
      "with $1",
      "do",
      "\t$2",
      "end"
    ]
  },
  "If statement": {
    "prefix": "if",
    "description": "if statement",
    "body": [
      "if $1 do",
      "\t$2",
      "end"
    ]
  }
}
